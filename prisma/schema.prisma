// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  OWNER
  PROFESSOR
}

enum Clearance {
  REGULAR
  STUDENT
  PROFESSOR
  OWNER
  MASTER
}

enum Belt {
  WHITE
  BLUE
  PURPLE
  BROWN
  BLACK
}

enum Status {
  ACTIVE
  EXPIRED
}

enum TypeMembership {
  MONTH
  TRIMESTER
  SEMESTER
  ANUAL
}

enum PaymentMethod {
  CARD
  CASH
  BANK
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  secret    String
  clearance Clearance @default(REGULAR)
  profile Profile?
  membership Membership?

  student    Student? @relation(fields: [student_id], references: [id])
  student_id Int?     @unique
  staff      Staff?   @relation(fields: [staff_id], references: [id])
  staff_id   Int?     @unique
  owned_gym Academy?
}

model Membership {
  id Int @id @default(autoincrement())
  status Status @default(EXPIRED)
  type TypeMembership @default(MONTH)
  payment PaymentMethod @default(CARD)

  expiry_date DateTime @default(now())
  member_since DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  userId Int @unique
  academy Academy @relation(fields: [academyId], references: [id])
  academyId Int @unique
}

model Student {
  id Int @id @default(autoincrement())

  user       User?
  gym        Academy     @relation(fields: [gym_id], references: [id])
  gym_id     Int
  classrooms Classroom[]
}

model Staff {
  id   Int  @id @default(autoincrement())
  role Role @default(PROFESSOR)

  user       User?
  gym        Academy?    @relation(fields: [gym_id], references: [id])
  gym_id     Int?        @unique
  classrooms Classroom[]
}

model Academy {
  id   Int    @id @default(autoincrement())
  name String
 
  students Student[]
  staff    Staff[]
  memberships Membership[]
  owner User @relation(fields: [owner_id], references: [id])
  owner_id Int @unique
}

model Classroom {
  id Int @id @default(autoincrement())

  staff    Staff[]
  students Student[]
}

model Profile {
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  rank Belt @default(WHITE)
  biography String
  picUrl String @db.LongText
  
  user User @relation(fields: [userID], references: [id])
  userID Int @unique
}